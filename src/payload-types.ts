/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    whatsapp: Whatsapp;
    phone: Phone;
    'cookie-consent': CookieConsent;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    whatsapp: WhatsappSelect<false> | WhatsappSelect<true>;
    phone: PhoneSelect<false> | PhoneSelect<true>;
    'cookie-consent': CookieConsentSelect<false> | CookieConsentSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    /**
     * The main heading of the hero section
     */
    title?: string | null;
    /**
     * Add multiple phrases for the rotating second title (minimum 3 recommended)
     */
    title2?:
      | {
          /**
           * A phrase for the rotating title
           */
          phrase: string;
          id?: string | null;
        }[]
      | null;
    /**
     * The subtitle or secondary heading
     */
    subtitle?: string | null;
    /**
     * A brief description or supporting text
     */
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | TitleBlock
    | TwoColumnRowBlock
    | HorizontalScrollCardsBlock
    | RetailerShowcaseBlock
    | NumberCountersBlock
    | FeatureShowcaseBlock
    | LogoMarqueeBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TitleBlock".
 */
export interface TitleBlock {
  /**
   * The main title to display
   */
  title: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'titleBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumnRowBlock".
 */
export interface TwoColumnRowBlock {
  rows?:
    | {
        left: {
          type: 'text' | 'media';
          text?: {
            headline?: string | null;
            title?: string | null;
            bodyText?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              newTab?: boolean | null;
            };
          };
          media?: {
            media: number | Media;
            overlayText?: string | null;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              newTab?: boolean | null;
            };
          };
        };
        right: {
          type: 'text' | 'media';
          text?: {
            headline?: string | null;
            title?: string | null;
            bodyText?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              newTab?: boolean | null;
            };
          };
          media?: {
            media: number | Media;
            overlayText?: string | null;
            enableLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: number | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: number | Post;
                  } | null);
              url?: string | null;
              label: string;
              newTab?: boolean | null;
            };
          };
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoColumnRow';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HorizontalScrollCardsBlock".
 */
export interface HorizontalScrollCardsBlock {
  cards: {
    title: string;
    description?: string | null;
    image: number | Media;
    enableLink?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      newTab?: boolean | null;
    };
    id?: string | null;
  }[];
  cardHeight?: ('350' | '450' | '550') | null;
  cardWidth?: ('350' | '450' | '550') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'horizontalScrollCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RetailerShowcaseBlock".
 */
export interface RetailerShowcaseBlock {
  /**
   * Main title for the showcase section
   */
  title: string;
  /**
   * Optional description text
   */
  description?: string | null;
  /**
   * Background image for the section (optional)
   */
  backgroundImage?: (number | null) | Media;
  /**
   * Add retailer cards to showcase
   */
  retailers: {
    /**
     * Small logo for the retailer
     */
    logo: number | Media;
    /**
     * Cover image for the card
     */
    coverImage: number | Media;
    /**
     * Retailer name/title (optional)
     */
    title?: string | null;
    /**
     * Subtitle or tagline (optional)
     */
    subtitle?: string | null;
    /**
     * List of services or features (use bullet points)
     */
    points?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    enableLink?: boolean | null;
    link?: {
      type?: ('reference' | 'custom') | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      newTab?: boolean | null;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'retailerShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberCountersBlock".
 */
export interface NumberCountersBlock {
  /**
   * Optional section title
   */
  title?: string | null;
  /**
   * Optional description text
   */
  description?: string | null;
  /**
   * Add number counters to display
   */
  counters: {
    /**
     * Type of value to display
     */
    valueType: 'single' | 'range' | 'percentage' | 'percentageRange';
    /**
     * Single number value
     */
    singleValue?: number | null;
    /**
     * Start of range
     */
    rangeStart?: number | null;
    /**
     * End of range
     */
    rangeEnd?: number | null;
    /**
     * Percentage value (e.g., 50 for 50%)
     */
    percentageValue?: number | null;
    /**
     * Start of percentage range (e.g., 25 for 25%)
     */
    percentageRangeStart?: number | null;
    /**
     * End of percentage range (e.g., 40 for 40%)
     */
    percentageRangeEnd?: number | null;
    /**
     * Add % symbol to the number(s)
     */
    isPercentage?: boolean | null;
    /**
     * Description text below the number
     */
    label: string;
    /**
     * Starting value for animation (default: 0)
     */
    animationStartValue?: number | null;
    /**
     * Animation direction
     */
    direction?: ('up' | 'down') | null;
    /**
     * Delay before animation starts (seconds)
     */
    delay?: number | null;
    /**
     * Number of decimal places to show
     */
    decimalPlaces?: number | null;
    id?: string | null;
  }[];
  /**
   * Layout arrangement for the counters
   */
  layout?: ('grid' | 'row' | 'column') | null;
  /**
   * Background color theme
   */
  backgroundColor?: ('dark' | 'light' | 'transparent') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'numberCounters';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureShowcaseBlock".
 */
export interface FeatureShowcaseBlock {
  /**
   * Optional section title
   */
  title?: string | null;
  /**
   * Optional section description
   */
  description?: string | null;
  /**
   * Add feature cards (max 3 per row)
   */
  cards: {
    /**
     * Icon for the feature card (SVG recommended)
     */
    icon: number | Media;
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Background color for the card
     */
    backgroundColor?: ('teal' | 'mustard' | 'darkGray' | 'blue' | 'green' | 'purple' | 'orange' | 'red') | null;
    /**
     * Action button configuration
     */
    button: {
      /**
       * Button text
       */
      text: string;
      /**
       * Button link
       */
      link: {
        type?: ('reference' | 'custom') | null;
        reference?:
          | ({
              relationTo: 'pages';
              value: number | Page;
            } | null)
          | ({
              relationTo: 'posts';
              value: number | Post;
            } | null);
        url?: string | null;
        label: string;
        newTab?: boolean | null;
      };
    };
    id?: string | null;
  }[];
  /**
   * Layout arrangement for the cards
   */
  layout?: ('threeColumn' | 'twoColumn' | 'singleColumn') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoMarqueeBlock".
 */
export interface LogoMarqueeBlock {
  /**
   * Description text explaining the integration capabilities
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Add company logos for the marquee (minimum 6, will be distributed across 3 rows)
   */
  logos: {
    /**
     * Company logo (SVG or PNG recommended)
     */
    logo: number | Media;
    /**
     * Company name for accessibility (optional)
     */
    companyName?: string | null;
    /**
     * Highlight this logo with a border
     */
    highlighted?: boolean | null;
    /**
     * Make logo clickable
     */
    enableLink?: boolean | null;
    /**
     * Logo link (optional)
     */
    link?: {
      type?: ('reference' | 'custom') | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      newTab?: boolean | null;
    };
    id?: string | null;
  }[];
  /**
   * Marquee animation settings
   */
  marqueeSettings?: {
    /**
     * Marquee animation speed
     */
    speed?: ('slow' | 'normal' | 'fast') | null;
    /**
     * Pause animation when hovering over logos
     */
    pauseOnHover?: boolean | null;
    /**
     * Reverse animation direction
     */
    reverse?: boolean | null;
  };
  /**
   * Background color for the section
   */
  backgroundColor?: ('white' | 'lightGray' | 'lightBlue') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'logoMarquee';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        title?: T;
        title2?:
          | T
          | {
              phrase?: T;
              id?: T;
            };
        subtitle?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        titleBlock?: T | TitleBlockSelect<T>;
        twoColumnRow?: T | TwoColumnRowBlockSelect<T>;
        horizontalScrollCards?: T | HorizontalScrollCardsBlockSelect<T>;
        retailerShowcase?: T | RetailerShowcaseBlockSelect<T>;
        numberCounters?: T | NumberCountersBlockSelect<T>;
        featureShowcase?: T | FeatureShowcaseBlockSelect<T>;
        logoMarquee?: T | LogoMarqueeBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TitleBlock_select".
 */
export interface TitleBlockSelect<T extends boolean = true> {
  title?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumnRowBlock_select".
 */
export interface TwoColumnRowBlockSelect<T extends boolean = true> {
  rows?:
    | T
    | {
        left?:
          | T
          | {
              type?: T;
              text?:
                | T
                | {
                    headline?: T;
                    title?: T;
                    bodyText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                  };
              media?:
                | T
                | {
                    media?: T;
                    overlayText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                  };
            };
        right?:
          | T
          | {
              type?: T;
              text?:
                | T
                | {
                    headline?: T;
                    title?: T;
                    bodyText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                  };
              media?:
                | T
                | {
                    media?: T;
                    overlayText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                  };
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HorizontalScrollCardsBlock_select".
 */
export interface HorizontalScrollCardsBlockSelect<T extends boolean = true> {
  cards?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
              newTab?: T;
            };
        id?: T;
      };
  cardHeight?: T;
  cardWidth?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RetailerShowcaseBlock_select".
 */
export interface RetailerShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  backgroundImage?: T;
  retailers?:
    | T
    | {
        logo?: T;
        coverImage?: T;
        title?: T;
        subtitle?: T;
        points?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
              newTab?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberCountersBlock_select".
 */
export interface NumberCountersBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  counters?:
    | T
    | {
        valueType?: T;
        singleValue?: T;
        rangeStart?: T;
        rangeEnd?: T;
        percentageValue?: T;
        percentageRangeStart?: T;
        percentageRangeEnd?: T;
        isPercentage?: T;
        label?: T;
        animationStartValue?: T;
        direction?: T;
        delay?: T;
        decimalPlaces?: T;
        id?: T;
      };
  layout?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureShowcaseBlock_select".
 */
export interface FeatureShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  cards?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        backgroundColor?: T;
        button?:
          | T
          | {
              text?: T;
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
            };
        id?: T;
      };
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoMarqueeBlock_select".
 */
export interface LogoMarqueeBlockSelect<T extends boolean = true> {
  description?: T;
  logos?:
    | T
    | {
        logo?: T;
        companyName?: T;
        highlighted?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
              newTab?: T;
            };
        id?: T;
      };
  marqueeSettings?:
    | T
    | {
        speed?: T;
        pauseOnHover?: T;
        reverse?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        /**
         * Enable this to add a dropdown menu with multiple sections
         */
        hasDropdown?: boolean | null;
        /**
         * Add up to 3 sections to your dropdown menu
         */
        dropdownItems?:
          | {
              /**
               * The main title for this dropdown section
               */
              title: string;
              /**
               * Choose an icon for this section
               */
              icon?: ('none' | 'help' | 'topics' | 'tools' | 'business' | 'marketing' | 'growth') | null;
              /**
               * Add links to this dropdown section
               */
              items?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: number | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: number | Post;
                          } | null);
                      url?: string | null;
                      label: string;
                    };
                    /**
                     * Optional sub-text description for this link
                     */
                    description?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  demoButton?: {
    text?: string | null;
    link?: {
      type?: ('custom' | 'reference') | null;
      url?: string | null;
      reference?: (number | null) | Page;
      newTab?: boolean | null;
    };
  };
  /**
   * Show the language selector button in the header
   */
  showLanguageSelector?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Background image for the footer (optional)
   */
  backgroundImage?: (number | null) | Media;
  /**
   * Main headline text (first part)
   */
  headline: string;
  /**
   * Highlighted text in blue (second part of headline)
   */
  headlineHighlight: string;
  /**
   * Ending text of headline (after highlighted part)
   */
  headlineEnd: string;
  /**
   * Sub-headline text below the main headline
   */
  subheadline: string;
  /**
   * Placeholder text for email input field
   */
  emailPlaceholder?: string | null;
  /**
   * Text for the call-to-action button
   */
  buttonText?: string | null;
  /**
   * Contact information text
   */
  contactInfo?: string | null;
  /**
   * Social media links
   */
  socialMedia?:
    | {
        /**
         * Social media platform
         */
        platform: 'youtube' | 'linkedin' | 'instagram' | 'facebook';
        /**
         * URL for the social media profile
         */
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Legal links in the footer
   */
  legalLinks?:
    | {
        /**
         * Link text
         */
        text: string;
        /**
         * Link URL
         */
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Copyright text
   */
  copyright?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp".
 */
export interface Whatsapp {
  id: number;
  /**
   * Show or hide the floating WhatsApp button
   */
  enabled?: boolean | null;
  /**
   * Phone number for WhatsApp (include country code, e.g., +1234567890)
   */
  phoneNumber: string;
  /**
   * Default message that will be pre-filled when users click the WhatsApp button
   */
  message?: string | null;
  /**
   * Position of the WhatsApp button on the screen
   */
  position?: ('bottom-right' | 'bottom-left') | null;
  /**
   * Size of the WhatsApp button
   */
  size?: ('small' | 'medium' | 'large') | null;
  /**
   * Text shown when hovering over the WhatsApp button
   */
  tooltipText?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phone".
 */
export interface Phone {
  id: number;
  /**
   * Show or hide the floating phone button
   */
  enabled?: boolean | null;
  /**
   * Phone number for direct calling (include country code, e.g., +1234567890)
   */
  phoneNumber: string;
  /**
   * Position of the phone button on the screen
   */
  position?: ('bottom-right' | 'bottom-left') | null;
  /**
   * Size of the phone button
   */
  size?: ('small' | 'medium' | 'large') | null;
  /**
   * Text shown when hovering over the phone button
   */
  tooltipText?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-consent".
 */
export interface CookieConsent {
  id: number;
  /**
   * Show or hide the cookie consent banner
   */
  enabled?: boolean | null;
  /**
   * Main title of the cookie consent banner
   */
  title?: string | null;
  /**
   * Main message explaining cookie usage
   */
  message?: string | null;
  /**
   * Text for the accept button
   */
  acceptText?: string | null;
  /**
   * Text for the decline button
   */
  declineText?: string | null;
  /**
   * Text for the learn more link
   */
  learnMoreText?: string | null;
  /**
   * URL for the learn more link (privacy policy page)
   */
  learnMoreUrl?: string | null;
  /**
   * Position of the cookie consent banner
   */
  position?: ('bottom' | 'top') | null;
  /**
   * Visual theme of the cookie consent banner
   */
  theme?: ('light' | 'dark') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        hasDropdown?: T;
        dropdownItems?:
          | T
          | {
              title?: T;
              icon?: T;
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    description?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  demoButton?:
    | T
    | {
        text?: T;
        link?:
          | T
          | {
              type?: T;
              url?: T;
              reference?: T;
              newTab?: T;
            };
      };
  showLanguageSelector?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  backgroundImage?: T;
  headline?: T;
  headlineHighlight?: T;
  headlineEnd?: T;
  subheadline?: T;
  emailPlaceholder?: T;
  buttonText?: T;
  contactInfo?: T;
  socialMedia?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  legalLinks?:
    | T
    | {
        text?: T;
        url?: T;
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp_select".
 */
export interface WhatsappSelect<T extends boolean = true> {
  enabled?: T;
  phoneNumber?: T;
  message?: T;
  position?: T;
  size?: T;
  tooltipText?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "phone_select".
 */
export interface PhoneSelect<T extends boolean = true> {
  enabled?: T;
  phoneNumber?: T;
  position?: T;
  size?: T;
  tooltipText?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-consent_select".
 */
export interface CookieConsentSelect<T extends boolean = true> {
  enabled?: T;
  title?: T;
  message?: T;
  acceptText?: T;
  declineText?: T;
  learnMoreText?: T;
  learnMoreUrl?: T;
  position?: T;
  theme?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}